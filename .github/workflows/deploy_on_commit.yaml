name: Build and deploy the application when a commit is sent to main
on:
  push:
    branches:
      - main
jobs:
  build-and-push:
    permissions:
      contents: write 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    # Fetch the last version, bumpt it accordigly (simver) and create a new tag
    - name: Bump version and tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.2
      with:
        default_bump: patch
        release_branches: main
        github_token: ${{ secrets.GITHUB_TOKEN }}

    # Install Digital ocean command line and register
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    # Setup docker build options (Digital ocean target : AMD64)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        # Digital ocean compatibility
        platforms: linux/amd64

    - name: Login to DockerHub
      uses: docker/login-action@v3.1.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build our new image and push it to docker hub
    - name: Build and push
      uses: docker/build-push-action@v5.3.0
      with:
        context: .
        file: ./Dockerfile
        push: true
        # the new_version is yield without the prefix
        tags: dirdros/signa_lingo_web_frontend:${{ steps.tag_version.outputs.new_version }}
        platforms: linux/amd64

    # Retrieve digital ocean app.yaml (to change the deployed docker image tag)
    - name: Fetch current app spec
      run: doctl apps spec get ${{ secrets.DIGITALOCEAN_APP_ID }} > app.yaml

    # Replace the docker image tag with our new version
    - name: Modify tag to deploy the latest (bumped) version
      run: |
        sed -i.bak 's/tag: ${{ steps.tag_version.outputs.previous_version }}/tag: ${{ steps.tag_version.outputs.new_version }}/' app.yaml

    # Push the change to Digital Ocean (which will trigger a new deployment)
    - name: Push updated app spec
      run: doctl apps update ${{ secrets.DIGITALOCEAN_APP_ID }} --spec app.yaml

    # Remove original fetched file and sed bak file
    - name: Delete app spec
      run: |
        cat app.yaml &&\
        rm app.yaml &&\
        rm app.yaml.bak
